package capacity;

public class Choose{
	/**
	 * @名称：比较法机器人
	 * @原理
	 * ①当离开开局套路时，自动启动比较法机器人算法
	 * ②A、B、C、D级别优先级逐渐下降
	 * ③在高优先级相同的情况下，比较低优先级数量
	 * ④当所有优先级都没有的情况下，落子在最靠近屏幕中心的位置
	 * @说明
	 * [A级重要性]直接胜手
	 * A1:己方形成五子连珠(己方直接胜手)
	 * A2:堵对方四字相连(防守对方直接胜手)
	 * [B级重要性]可形成胜手
	 * B1:己方形成活四，己方形成三四，己方形成双四(己方无法被阻挡制胜手)
	 * B2:堵对方将形成的活四，堵对方将形成的三四；堵对方将形成的双四(防守对方无法被阻挡制胜手)
	 * B3:己方形成双三(己方可能被阻挡制胜手)
	 * B4:堵对方将形成的双三(防守对方可能被阻挡制胜手)
	 * [C级重要性]形成胜手威胁
	 * C1:堵对方活三(防守对方形成胜手)
	 * [D级重要性]形成攻击、防守形
	 * D1:己方形成活二、堵对方已形成的活二
	 * D2:己方形成死三、堵对方已形成的死三
	 * @模块
	 * [开局阵法模块]
	 * [读取棋盘模块]
	 * [分析落子模块]
	 */
	
	//【执行一次计算请求】
	public static int[] go(){
		int site[]=new int[2];
		site[0]=0;
		site[1]=0;
		return site;
	}
	
	
}
